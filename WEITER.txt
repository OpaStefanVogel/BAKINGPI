cd ok02
hexdump kernel.img -e '"%08.08_ax " 1/4 "%08x " "\n"'
make
#dann kernel.img nach RPIB:/boot kopieren.
#----------------------------------------------------


//aus doppioandante.github.io/2015/07/10/Simple-ARM-programming-on-linux.html
arm-none-eabi-as source/main.s -g -o empty.o
arm-none-eabi-ld empty.o -o empty
sudo gdb empty
  file empty
  ^X A
  layout regs
  b 1
  r
  s
  s
  s
  
  
  
#https://www.raspberrypi.org/forums/viewtopic.php?f=72&t=274528
sudo cat /proc/iomem  
#fe200000-fe2000b3 : gpio@7e200000

#-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!-!
###ttyS0 in Raspberyy Konfiguration erlauben. Dann
make
hexdump kernel.img -v -e '1/4 "%08x" "\n"' >T7000.txt
#dann in T7000.txt am Anfang ein L und am Ende ein M einfÃ¼gen. 
#Zwischendurch * ist doppelter Inhalt, ersetzten!
#und noch HALLI statt HALLO und Blinkzahl und -dauer verstellen
nano T7000.txt
#ein extra lxterminal mit stty und cp laut BAKINGPI_starten.txt
#dort Taste R, dann (T700.txt beginnt schon mit L)
cat T7000.txt >/dev/ttyS0
#dann Taste N, dann (T800.txt beginnt schon mit P)
cat T8000.txt >/dev/ttyS0


#gpio im Terminal schalten:
cd /sys/class/gpio
ls
sudo echo 4 > export
ls #neu ein Verzeichnis gpio4
sudo echo "out" > gpio4/direction
sudo echo 1 > gpio4/value
sudo echo 0 > gpio4/value


