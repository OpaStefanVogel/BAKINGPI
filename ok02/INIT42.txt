( vorher main.s mit A00C laden

( FIQ auf mini UART anwenden:
0A 00C MLIT MCODE FIQ 00 FIQ M. 40 FIQ M. ( 200001D3 20000193 )
2000B20C CONSTANT FIQ_KANAL
10008 CONSTANT UARTUMSCHALTBIT

: FIQ=UART
  9D FIQ_KANAL ! ( FIQ=AUX
  -1 UARTUMSCHALTBIT ! 
  ;

FIQ=UART

: FIQ=0
  0 FIQ_KANAL ! ( FIQ=AUX
  0 UARTUMSCHALTBIT ! 
  ;

( FIQ=0

( BAUD noch auf VARIABLE BAUD ummachen:
: BAUD! ( bd -- ) 20215068 ! ; ( 10E = 115000, 
: BAUD@ ( -- bd ) 20215068 @ ;
: BAUD? ( -- bd ) BAUD@ M. ;
BAUD? ( 0000010E )

( Free running counter Page 196
003E0220 2000B408 !
( 003E 0020 2000 B408 2!
2000B420 @ M.
2000B420 @ M.
2000B420 @ M.




( ----------------------------------------- alt, nur fÃ¼r 16 Bit

( ARM Timer Page 196
003E 02A2 2000 B408 2!
00FF FFFF 2000 B400 2!
( 003E 0020 2000 B408 2! ( Timer aus
2000 B404 2@ M. M. ( timer value
2000 B404 2@ M. M.
2000 B404 2@ M. M.
( )
( 0 0 2000 B40C 2! ( clear IRQ-flag
2000 B404 2@ M. M. 0 10 DUMP ( timer value
2000 B410 2@ M. M. ( read        IRQ-flag
2000 B414 2@ M. M. ( read masked IRQ-flag
( )
0 C0 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ erlauben mit 80 und source ARM Timer einstellen mit 40

( also 1. ARM Timer aktivieren, 2. Loadvalue einstellen, 3. FIQ auf source ARM Timer, 4. FIQ in den Flags )


: TEST 0 7 2021 05 048 MLIT 2! 2021 05 048 MLIT 2@ M. M. ;
TEST
0 2 2021 5044 2! 
2021 5048 2@ M. M. 2021 5048 2@ M. M.

: TEST2 10 BEGIN
  ( 0 2 2021 05 044 MLIT 2! 
  2021 05 048 MLIT 2@ M. M.
  CR DUP M. -1 M+ DUP 0= UNTIL ;
TEST2
0 5 2021 5044 2! 

( -- altes LOGINPUT:
: LOGINPUT ( bis von --> <inputtext> )
  BEGIN
    ( CR DUP M. 1000 OVER 2@ OVER M. DUP M. EMIT DROP
    1000 OVER 2@ DUP FF AND 0D = IF DROP 0A END_IF EMIT DROP
    1+
    2DUP = UNTIL
  ;
2 @ 4 LOGINPUT 0 10 DUMP


