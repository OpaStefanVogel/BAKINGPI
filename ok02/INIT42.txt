: BAUD! ( bd -- ) 0 SWAP 2021 3000 2068 M+ 2! ;
: BAUD? ( -- bd ) 2021 3000 2068 M+ 2@ M. DROP ;

( FIQ=mini UART
( zuerst aktuelles kernel.img laden, dann
0 0 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ=0
0 9D 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ=AUX
0A 00C MLIT MCODE FIQ
00 FIQ M. ( 01D3 )
40 FIQ M. -1 4 ! CR 0 10 DUMP CR 0 10 DUMP CR 0 10 DUMP CR ( 0193 kann aber nicht rückgängig gemacht werden )

( Tests weiL was nicht ging
: T 1 2809 ! 77 88 99 M* M+ M. 0 2809 ! ; 

0 0 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ=0
0 9D 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ=AUX
0 10 DUMP
0 10 DUMP
0 10 DUMP

0A 00C MLIT MCODE FIQ
00 FIQ M. ( 01D3 )
40 FIQ M. -1 4 ! CR 0 10 DUMP CR 0 10 DUMP CR 0 10 DUMP CR ( 0193 kann aber nicht rückgängig gemacht werden )
0 10 DUMP
0 10 DUMP

( Free running counter Page 196
003E 0220 2000 B408 2!
( 003E 0020 2000 B408 2!
2000 B420 2@ M. M.
2000 B420 2@ M. M.
2000 B420 2@ M. M.

( zusätzlich ARM Timer Page 196
003E 02A2 2000 B408 2!
00FF FFFF 2000 B400 2!
( 003E 0020 2000 B408 2! ( Timer aus
2000 B404 2@ M. M. ( timer value
2000 B404 2@ M. M.
2000 B404 2@ M. M.
( )
( 0 0 2000 B40C 2! ( clear IRQ-flag
2000 B404 2@ M. M. 0 10 DUMP ( timer value
2000 B410 2@ M. M. ( read        IRQ-flag
2000 B414 2@ M. M. ( read masked IRQ-flag
( )
0 C0 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ erlauben mit 80 und source ARM Timer einstellen mit 40

( also 1. ARM Timer aktivieren, 2. Loadvalue einstellen, 3. FIQ auf source ARM Timer, 4. FIQ in den Flags )


: TEST 0 7 2021 05 048 MLIT 2! 2021 05 048 MLIT 2@ M. M. ;
TEST
0 2 2021 5044 2! 
2021 5048 2@ M. M. 2021 5048 2@ M. M.

: TEST2 10 BEGIN 
  ( 0 2 2021 05 044 MLIT 2! 
  2021 05 048 MLIT 2@ M. M.
  CR DUP M. -1 M+ DUP 0= UNTIL ;
TEST2
0 5 2021 5044 2! 

( -- altes LOGINPUT:
: LOGINPUT ( bis von --> <inputtext> )
  BEGIN
    ( CR DUP M. 1000 OVER 2@ OVER M. DUP M. EMIT DROP
    1000 OVER 2@ DUP FF AND 0D = IF DROP 0A END_IF EMIT DROP
    1+
    2DUP = UNTIL
  ;
2 @ 4 LOGINPUT 0 10 DUMP


( ================================================================================ )
( RASPBERRY PI B           <===>    HX711 )
( PIN 17  3v3              <--->    VCC
( PIN 19  GPIO10  (MOSI)
( PIN 21  GPIO09  (MISO)   <--->    DT   
( PIN 23  GPIO11  (SCLK)   <--->    SCK
( PIN 25  Masse   (Ground) <--->    GND

( GPIO09 als INPUT, GPIO11 als OUTPUT
GPIOBASE @ 4 M+ @ 8 OR GPIOBASE @ 4 M+ ! ( GPIO11 als OUTPUT ...001... )
GPIOBASE @ 4 M+ @ N. ( 00012008 )
800 GPIOBASE @ 1C M+ ! ( PIN23HIGH GPIO11 SCLK=1 )
GPIOBASE @ 34 M+ @ N.  ( B.. SCLK=1 DT=1 )
800 GPIOBASE @ 28 M+ ! ( PIN23LOW GPIO11 SCLK=0 )
GPIOBASE @ 34 M+ @ N.  ( 3.. SCLK=0 DT=1 )
GPIOBASE @ 34 M+ @ N.  ( 3.. SCLK=0 DT=1 )
GPIOBASE @ 34 M+ @ N.  ( 1.. SCLK=0 DT=0 )
GPIOBASE @ 34 M+ @ N.  ( 1.. SCLK=0 DT=0 )
GPIOBASE @ 34 M+ @ N.  ( 1.. SCLK=0 DT=0 )

: WARTE1MIKROSEK ( --> ) 58 BEGIN 1 M- DUP 0= UNTIL DROP ;
: WARTEnMIKROSEK ( n --> ) BEGIN 1 M- WARTE1MIKROSEK DUP 0= UNTIL DROP ;
( 0A 0A M* 0A M* 0A M* WARTEnMIKROSEK
( 400 0A M* WARTEnMIKROSEK

: SCLKHIGH 800 GPIOBASE @ 1C M+ ! ;
: SCLKLOW 800 GPIOBASE @ 28 M+ ! ;
: DTREAD ( --> b ) GPIOBASE @ 34 M+ @ 200 AND 0= 0= ;
: DTEMIT DTREAD M. WARTE1MIKROSEK ;
: HX711START
  SCLKHIGH DTEMIT 
  400 WARTEnMIKROSEK
  SCLKLOW DTEMIT
  BEGIN DTREAD 0= UNTIL
  DTEMIT
  ;

HX711START

: HX711READ
  19 BEGIN
    SCLKHIGH ( WARTE1MIKROSEK
    SCLKLOW ( WARTE1MIKROSEK
    DTREAD SWAP
    1 M- 
    DUP 0= UNTIL DROP
  19 BEGIN
    SWAP 31 M+ EMIT
    1 M- 
    DUP 0= UNTIL DROP
  ;

HX711READ

0 VARIABLE HX711TARA
0 VARIABLE HX711RAW
00FD 9A00 UI HX711TARA !

: HX711READ
  SCLKLOW
  ( 40 WARTEnMIKROSEK
  0 BEGIN 1 M+ DTREAD 0= UNTIL DROP ( M.
  0
  18 BEGIN
    SCLKHIGH ( WARTE1MIKROSEK
    SCLKLOW ( WARTE1MIKROSEK
    SWAP DUP M+
    DTREAD IF 1 M+ END_IF
    SWAP 
    1 M- 
    DUP 0= UNTIL DROP
  DUP HX711RAW !
  SCLKHIGH ( WARTE1MIKROSEK
  SCLKLOW ( WARTE1MIKROSEK
  DUP 80 0 UI AND 0= IF F 0F00 MLIT 0 UI M- END_IF
  HX711TARA @ M-
  ;

HX711READ CR N. HX711READ CR N. HX711READ CR N. HX711READ CR N. HX711READ CR N.

: HX711DAUERLESEN BEGIN HX711READ KEYCODE SWAP 30 = IF HX711RAW @ HX711TARA ! DROP 0 END_IF 0= WHILE CR N. REPEAT ;

HX711DAUERLESEN
