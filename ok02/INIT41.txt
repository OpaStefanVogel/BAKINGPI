( : LIT, ( a --> ... DUP ABS 04 000 MLIT AND IF 111 ERROR END_IF , ;
( LIT, reparieren:   muss da 0C sein
0C ' LIT, 2 M+ ! ( macht aus der 04 ein 0C )

0A 029 MLIT MCODE 2!
0A 02A MLIT MCODE 2@

: BAUD! ( bd -- ) 0 SWAP 2021 3000 2068 M+ 2! ;
: BAUD? ( -- bd ) 2021 3000 2068 M+ 2@ M. DROP ;


: DUMP ( addr n --> )
  BEGIN SWAP ( CR DUP M. ) DUP @ M. 1+ SWAP 1- DUP 0= UNTIL 2DROP ;

0 10 DUMP


: T 1 2809 ! 77 88 99 M* M+ M. 0 2809 ! ; 

: PIN3HIGH 0 4 2020 001C 2! ;
: PIN3LOW  0 4 2020 0028 2! ;

PIN3LOW
PIN3HIGH

0 0 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ=0
0 9D 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ=AUX
0 10 DUMP
0 10 DUMP
0 10 DUMP

0A 00C MLIT MCODE FIQ
00 FIQ M. ( 01D3 )
40 FIQ M. -1 4 ! CR 0 10 DUMP CR 0 10 DUMP CR 0 10 DUMP CR ( 0193 kann aber nicht rückgängig gemacht werden )
0 10 DUMP
0 10 DUMP

( Free running counter Page 196
003E 0220 2000 B408 2!
( 003E 0020 2000 B408 2!
2000 B420 2@ M. M.
2000 B420 2@ M. M.
2000 B420 2@ M. M.

( zusätzlich ARM Timer Page 196
003E 02A2 2000 B408 2!
00FF FFFF 2000 B400 2!
( 003E 0020 2000 B408 2! ( Timer aus
2000 B404 2@ M. M. ( timer value
2000 B404 2@ M. M.
2000 B404 2@ M. M.
( )
( 0 0 2000 B40C 2! ( clear IRQ-flag
2000 B404 2@ M. M. 0 10 DUMP ( timer value
2000 B410 2@ M. M. ( read        IRQ-flag
2000 B414 2@ M. M. ( read masked IRQ-flag
( )
0 C0 2000 B20C 2! 2000 B20C 2@ M. M. ( FIQ erlauben mit 80 und source ARM Timer einstellen mit 40

( also 1. ARM Timer aktivieren, 2. Loadvalue einstellen, 3. FIQ auf source ARM Timer, 4. FIQ in den Flags )


: TEST 0 7 2021 05 048 MLIT 2! 2021 05 048 MLIT 2@ M. M. ;
TEST
0 2 2021 5044 2! 
2021 5048 2@ M. M. 2021 5048 2@ M. M.

: TEST2 10 BEGIN 
  ( 0 2 2021 05 044 MLIT 2! 
  2021 05 048 MLIT 2@ M. M.
  CR DUP M. -1 M+ DUP 0= UNTIL ;
TEST2
0 5 2021 5044 2! 
 
